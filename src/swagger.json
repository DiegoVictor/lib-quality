{
  "openapi":"3.0.2",
  "info": {
    "title":"Lib Quality",
    "version":"1.0",
    "license": {
      "name": "MIT",
      "url": "https://github.com/DiegoVictor/lib-quality/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url":"http://localhost:3333/v1"
    }
  ],
  "paths": {
    "/sessions": {
      "post": {
        "tags": ["sessions"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "johndoe@example.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authenticates user, return a Bearer Token and user's id and session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        }
                      }
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "user": {
                    "_id": "611addb87678b147a0cad501"
                  },
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWFkZGI4NzY3OGIxNDdhMGNhZDUwMSIsInNlc3Npb24iOiIxZDc2M2EzYy02ZTM1LTRjOTctYjE3Zi1iODVjNDI5NjAzNDciLCJpYXQiOjE2MjkxNTA2NTIsImV4cCI6MTYyOTIzNzA1Mn0.udEeh4VRJZjZhTQ3OeWF567rMfJz2_DowdfXkGW7t6Y"
                }
              }
            }
          },
          "404": {
            "description": "User and/or password does not match",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "statusCode": 404,
                  "error": "Not Found",
                  "message": "User and/or password does not match",
                  "code": 144
                }
              }
            }
          },
          "400": {
            "description": "User and/or password does not match",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "User and/or password does not match",
                  "code": 141
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "johndoe@example.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Create a new user"
          },
          "400": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "Email already in use",
                  "code": 140
                }
              }
            }
          }
        }
      }
    },
    "/analytics/chart": {
      "get": {
        "tags": ["analytics"],
        "parameters": [
          {
            "in": "query",
            "name": "repositories",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": ["ctimmerm/axios-mock-adapter", "testing-library/jest-dom"]
          }
        ],
        "responses": {
          "200": {
            "description": "Return data to fill a chart of lines",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "labels": [
                    "02/06/2021",
                    "11/06/2021"
                  ],
                  "datasets": [
                    {
                      "label": "ctimmerm/axios-mock-adapter - Opened Issues",
                      "data": [
                        0,
                        2
                      ],
                      "borderColor": "#21dd98",
                      "backgroundColor": "transparent"
                    },
                    {
                      "label": "ctimmerm/axios-mock-adapter - Closed Issues",
                      "data": [
                        1,
                        0
                      ],
                      "borderColor": "#d452d8",
                      "backgroundColor": "transparent"
                    },
                    {
                      "label": "testing-library/jest-dom - Opened Issues",
                      "data": [
                        0,
                        0
                      ],
                      "borderColor": "#91bdff",
                      "backgroundColor": "transparent"
                    },
                    {
                      "label": "testing-library/jest-dom - Closed Issues",
                      "data": [
                        0,
                        0
                      ],
                      "borderColor": "#6bef9c",
                      "backgroundColor": "transparent"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Any error while requesting data from GitHub",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "repositories": {
                    "description": "An error occured while trying to get repositories",
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred",
                      "code": 351
                    }
                  },
                  "issues": {
                    "description": "An error occured while trying to get repositories' issues",
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred",
                      "code": 352
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/{user}/{repository}": {
      "get": {
        "tags": ["analytics"],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ctimmerm"
          },
          {
            "in": "path",
            "name": "repository",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "axios-mock-adapter "
          }
        ],
        "responses": {
          "200": {
            "description": "Return repository's name, open issues count, days opened average and days opened deviation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics"
                },
                "example": {
                  "name": "ctimmerm/axios-mock-adapter",
                  "open_issues": 57,
                  "average": 894.5263157894736,
                  "deviation": 460.93631273224565
                }
              }
            }
          },
          "500": {
            "description": "An error occured while trying to get repositories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "repositories": {
                    "description": "An error occured while trying to get repositories",
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred",
                      "code": 351
                    }
                  },
                  "issues": {
                    "description": "An error occured while trying to get repositories' issues",
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred",
                      "code": 352
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Repositories": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          }
        }
      },
      "Statistics": {
        "properties": {
          "name": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "average": {
            "type": "number"
          },
          "deviation": {
            "type": "number"
          }
        }
      },
      "Error": {
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
